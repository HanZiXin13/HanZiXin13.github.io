{"title":"【Linux】Linux命令笔记","uid":"426935cfda214078fe347e2ba79a50b5","slug":"Linux命令笔记","date":"2022-05-27T07:27:22.000Z","updated":"2022-05-27T09:49:40.547Z","comments":true,"path":"api/articles/Linux命令笔记.json","keywords":null,"cover":null,"content":"<h1 id=\"Linux常用命令\"><a href=\"#Linux常用命令\" class=\"headerlink\" title=\"Linux常用命令\"></a>Linux常用命令</h1><h3 id=\"开启指定端口\"><a href=\"#开启指定端口\" class=\"headerlink\" title=\"开启指定端口\"></a>开启指定端口</h3><pre class=\"line-numbers language-Linux\" data-language=\"Linux\"><code class=\"language-Linux\">firewall-cmd --zone&#x3D;public --add-port&#x3D;8080&#x2F;tcp --permanent</code></pre>\n\n<p>含义：</p>\n<p>–zone\t#作用域</p>\n<p>–add-port&#x3D;8080&#x2F;tcp\t#端口&#x2F;通讯协议</p>\n<p>–permanent\t#永久生效</p>\n<h5 id=\"查看哪些端口或者服务是开放的\"><a href=\"#查看哪些端口或者服务是开放的\" class=\"headerlink\" title=\"查看哪些端口或者服务是开放的\"></a>查看哪些端口或者服务是开放的</h5><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">firewall-cmd --list-ports\nfirewall-cmd --list-services</code></pre>\n\n<h5 id=\"重启防火墙\"><a href=\"#重启防火墙\" class=\"headerlink\" title=\"重启防火墙\"></a>重启防火墙</h5><pre class=\"line-numbers language-Linux\" data-language=\"Linux\"><code class=\"language-Linux\">firewall-cmd --reload</code></pre>\n\n<h3 id=\"jboss相关命令\"><a href=\"#jboss相关命令\" class=\"headerlink\" title=\"jboss相关命令\"></a>jboss相关命令</h3><p>jboss.master.host</p>\n<p>JBOSS_HOME&#x3D;&#x2F;jboss&#x2F;wildfly-14.0.1.Final</p>\n<p>进入bin目录后执行:</p>\n<p>开启服务(&amp;表示后台启动)</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">.&#x2F;standalone.sh&amp;</code></pre>\n\n<p>关闭服务</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">.&#x2F;jboss-cli.sh --connect command&#x3D;:shutdown</code></pre>\n\n<h4 id=\"通过命令行部署war\"><a href=\"#通过命令行部署war\" class=\"headerlink\" title=\"通过命令行部署war\"></a>通过命令行部署war</h4><p>首先使用 <code>./jboss-cli.sh</code> 进入 Console界面</p>\n<p>部署：</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">deploy</code></pre>\n\n<p>销毁：</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">undeploy</code></pre>\n\n<h4 id=\"domain模式\"><a href=\"#domain模式\" class=\"headerlink\" title=\"domain模式\"></a>domain模式</h4><h6 id=\"管理员账号密码\"><a href=\"#管理员账号密码\" class=\"headerlink\" title=\"管理员账号密码\"></a>管理员账号密码</h6><p>admin&#x2F;admin</p>\n<p>组：admin</p>\n<p>凭证：<code>&lt;secret value=&quot;YWRtaW4=&quot; /&gt;</code></p>\n<h6 id=\"用户账号密码\"><a href=\"#用户账号密码\" class=\"headerlink\" title=\"用户账号密码\"></a>用户账号密码</h6><p>cargo&#x2F;cargo</p>\n<p>组：user</p>\n<p>凭证：<code>&lt;secret value=&quot;Y2FyZ28=&quot; /&gt;</code></p>\n<h3 id=\"Java命令\"><a href=\"#Java命令\" class=\"headerlink\" title=\"Java命令\"></a>Java命令</h3><p>指定 Java 版本：</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">update-alternatives --config java\nupdate-alternatives --config javac</code></pre>\n\n<h3 id=\"Docker相关\"><a href=\"#Docker相关\" class=\"headerlink\" title=\"Docker相关\"></a>Docker相关</h3><p>注：</p>\n<p>如果不是使用 root 用户，普通用户需要先授权，</p>\n<p>授权过程如下：</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">sudo gpasswd -a $&#123;USER&#125; dockerroot  # 新版docker组名是dockerroot，老版本是docker，如不确定，可以去&#x2F;etc&#x2F;group查看\nnewgrp dockerroot\nsudo systemctl restart docker  # 重启docker\nsudo chmod a+rw &#x2F;var&#x2F;run&#x2F;docker.sock  #给用户授权</code></pre>\n\n<h4 id=\"访问jboss\"><a href=\"#访问jboss\" class=\"headerlink\" title=\"访问jboss\"></a>访问jboss</h4><p>JDK11 dockerfile编写：</p>\n<pre class=\"line-numbers language-docker\" data-language=\"docker\"><code class=\"language-docker\"># jdk依赖于系统\nFROM centos:7.6.1810\n# 创建人和邮箱\nMAINTAINER han &lt;2278461857@qq.com&gt;\n# 创建目录\nRUN mkdir &#x2F;usr&#x2F;local&#x2F;java\n# 把压缩包移到目录下，自动解压\nADD jdk-11.tar.gz &#x2F;usr&#x2F;local&#x2F;java&#x2F;\n# 修改时区\nRUN ln -sf &#x2F;usr&#x2F;share&#x2F;zone&#x2F;info&#x2F;Asia&#x2F;Shanghai &#x2F;etc&#x2F;localtime\n# 编辑环境变量\nENV JAVA_HOME &#x2F;usr&#x2F;local&#x2F;java&#x2F;jdk-11.0.13\nENV PATH $JAVA_HOME&#x2F;bin:$PATH\n# VOLUME 指定了临时文件目录为&#x2F;tmp\n# 其效果是在主机 &#x2F;var&#x2F;lib&#x2F;docker 目录下创建了一个临时文件，并链接到容器的&#x2F;tmp\nVOLUME &#x2F;tmp</code></pre>\n\n<p>wildfly dockerfile编写：</p>\n<pre class=\"line-numbers language-docker\" data-language=\"docker\"><code class=\"language-docker\"># 依赖于java11\nFROM java:11\n# 创建人和邮箱\nMAINTAINER han &lt;2278461857@qq.com&gt;\n# 创建目录\nRUN mkdir &#x2F;usr&#x2F;local&#x2F;wildfly\n# 移动目录\nCOPY .&#x2F;wildfly-14.0.1.Final &#x2F;usr&#x2F;local&#x2F;wildfly&#x2F;\n# 修改时区\nRUN ln -sf &#x2F;usr&#x2F;share&#x2F;zone&#x2F;info&#x2F;Asia&#x2F;Shanghai &#x2F;etc&#x2F;localtime\n# 进入工作目录\nWORKDIR &#x2F;usr&#x2F;local&#x2F;wildfly&#x2F;wildfly-14.0.1.Final&#x2F;bin\n# 开放端口\nEXPOSE 9990\nRUN .&#x2F;domain.sh</code></pre>\n\n<h6 id=\"主机地址\"><a href=\"#主机地址\" class=\"headerlink\" title=\"主机地址\"></a>主机地址</h6><p>172.17.0.2</p>\n<h3 id=\"k8s安装和使用\"><a href=\"#k8s安装和使用\" class=\"headerlink\" title=\"k8s安装和使用\"></a>k8s安装和使用</h3><p>首先安装k8s：</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">yum install -y etcd kubernetes</code></pre>\n\n<p>修改配置文件：</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">vim &#x2F;etc&#x2F;sysconfig&#x2F;docker\n# 将   --selinux-enabled   改为   --selinux-enabled&#x3D;false --insecure-registry gcr.io\nvim &#x2F;etc&#x2F;kubernetes&#x2F;apiserver\n#将  KUBE_ADMISSION_CONTROL  参数中的  ServiceAccount  删除</code></pre>\n\n<p>启动所有服务：</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">for s in etcd docker kube-apiserver kube-controller-manager kube-scheduler kubelet kube-proxy; do systemctl start $s; done</code></pre>\n\n<p>kubeadm init <br>–apiserver-advertise-address&#x3D;192.168.237.138 <br>–image-repository registry.cn-hangzhou.aliyuncs.com&#x2F;google_containers <br>–kubernetes-version v1.17.3 <br>–service-cidr&#x3D;10.96.0.0&#x2F;16 <br>–pod-network-cidr&#x3D;192.168.0.0&#x2F;16</p>\n<p>kubeadm join 192.168.237.138:6443 –token ypj4qv.zojv6yetx417hg5c <br>    –discovery-token-ca-cert-hash sha256:8610f6f786fb73968577862a0094e65a93a017276d1f6f0da1c1b01778b39fc6 </p>\n<p>永不过期的令牌：</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">kubeadm join 192.168.237.138:6443 --token 自己的token     --discovery-token-ca-cert-hash sha256:8610f6f786fb73968577862a0094e65a93a017276d1f6f0da1c1b01778b39fc6</code></pre>\n\n\n\n<h5 id=\"创建pod节点配置文件\"><a href=\"#创建pod节点配置文件\" class=\"headerlink\" title=\"创建pod节点配置文件\"></a>创建pod节点配置文件</h5><p>创建命令：<code>kubectl create -f jboss-rc.yaml</code></p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\">apiVersion: v1\nkind: ReplicationController    # 副本控制器RC\nmetadata:\n  name: jboss                  # RC的名称，全局唯一\nspec:\n  replicas: 1                  # Pod副本的期待数量\n  selector:\n    app: jboss                 # 符合目标的Pod拥有此标签\n  template:                    # 根据此模板创建Pod的副本（实例）\n    metadata:\n      labels:\n        app: jboss             # Pod副本拥有的标签，对应RC的Selector\n    spec:\n      containers:              # Pod内容器的定义部分\n        - name: jboss-master     # 容器的名称\n          image: jboss:master    # 容器对应的Docker image\n          ports:\n          - containerPort: 8080  # 容器应用监听的端口号\n          - containerPort: 8230\n        # env:                 # 注入容器内的环境变量\n        # - name: MYSQL_ROOT_PASSWORD                     \n          # value: &quot;123456&quot;</code></pre>\n\n<p>固定ip：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\">annotations:\n       cni.projectcalico.org&#x2F;ipAddrs: &quot;[\\&quot;10.0.113.137\\&quot;]&quot;</code></pre>\n\n\n\n<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><h5 id=\"访问挂载点出现权限不足\"><a href=\"#访问挂载点出现权限不足\" class=\"headerlink\" title=\"访问挂载点出现权限不足\"></a>访问挂载点出现权限不足</h5><p>目录结构后加上 <code>--privileged=true </code></p>\n<p>例：</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">docker run -i -t -v &#x2F;jboss&#x2F;:&#x2F;root&#x2F;jboss --privileged&#x3D;true  jboss:master &#x2F;bin&#x2F;bash</code></pre>\n\n<h5 id=\"docker启动报错unable-to-configure-the-Docker-daemon-with-file\"><a href=\"#docker启动报错unable-to-configure-the-Docker-daemon-with-file\" class=\"headerlink\" title=\"docker启动报错unable to configure the Docker daemon with file\"></a>docker启动报错unable to configure the Docker daemon with file</h5><p>可能是由于daemon.json文件里配置的私有文件仓库和配置文件冲突</p>\n<p>几个配置文件：</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">EnvironmentFile&#x3D;-&#x2F;run&#x2F;containers&#x2F;registries.conf\nEnvironmentFile&#x3D;-&#x2F;etc&#x2F;sysconfig&#x2F;docker\nEnvironmentFile&#x3D;-&#x2F;etc&#x2F;sysconfig&#x2F;docker-storage\nEnvironmentFile&#x3D;-&#x2F;etc&#x2F;sysconfig&#x2F;docker-network</code></pre>\n\n<p>这次是在 -&#x2F;etc&#x2F;sysconfig&#x2F;docker 里找到冲突</p>\n<p>注：他机访问可能出现报错</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\"># 修改启动参数，信任私有仓库\nvim &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;docker.service\n# 加上--insecure-registry $&#123;192.168.92.134:5000&#125;</code></pre>\n\n<h5 id=\"k8s-node节点会优先读取本地的镜像，而不是去仓库拉取\"><a href=\"#k8s-node节点会优先读取本地的镜像，而不是去仓库拉取\" class=\"headerlink\" title=\"k8s node节点会优先读取本地的镜像，而不是去仓库拉取\"></a>k8s node节点会优先读取本地的镜像，而不是去仓库拉取</h5><h5 id=\"kubeadm初始化问题\"><a href=\"#kubeadm初始化问题\" class=\"headerlink\" title=\"*kubeadm初始化问题\"></a>*kubeadm初始化问题</h5><p>pod-network-cidr参数所指向的ip子网不能和主机子网相同！！！！！！！</p>\n<p>即如果您的网络运行在192.168.*.*使用10.0.0.0&#x2F;16</p>\n<p>如果您的网络是10.0.*.*使用192.168.0.0&#x2F;16</p>\n<h5 id=\"出现ping不通pod的情况\"><a href=\"#出现ping不通pod的情况\" class=\"headerlink\" title=\"出现ping不通pod的情况\"></a>出现ping不通pod的情况</h5><p>修改calico.yaml文件</p>\n<p>修改calico-node的env加上：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\">- name: IP_AUTODETECTION_METHOD\n  value: &quot;interface&#x3D;em1&quot;     # em1 是实际网卡</code></pre>\n","feature":true,"text":"Linux常用命令开启指定端口firewall-cmd --zone&#x3D;public --add-port&#x3D;8080&#x2F;tcp --permanent 含义： –zone #作用域 –add-port&#x3D;8080&#x2F;tcp #端口&#x2...","link":"","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"linux","slug":"linux","count":1,"path":"api/tags/linux.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">Linux常用命令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BC%80%E5%90%AF%E6%8C%87%E5%AE%9A%E7%AB%AF%E5%8F%A3\"><span class=\"toc-text\">开启指定端口</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E7%9C%8B%E5%93%AA%E4%BA%9B%E7%AB%AF%E5%8F%A3%E6%88%96%E8%80%85%E6%9C%8D%E5%8A%A1%E6%98%AF%E5%BC%80%E6%94%BE%E7%9A%84\"><span class=\"toc-text\">查看哪些端口或者服务是开放的</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E9%87%8D%E5%90%AF%E9%98%B2%E7%81%AB%E5%A2%99\"><span class=\"toc-text\">重启防火墙</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#jboss%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">jboss相关命令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%80%9A%E8%BF%87%E5%91%BD%E4%BB%A4%E8%A1%8C%E9%83%A8%E7%BD%B2war\"><span class=\"toc-text\">通过命令行部署war</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#domain%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">domain模式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%E7%AE%A1%E7%90%86%E5%91%98%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81\"><span class=\"toc-text\">管理员账号密码</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%E7%94%A8%E6%88%B7%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81\"><span class=\"toc-text\">用户账号密码</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Java%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">Java命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Docker%E7%9B%B8%E5%85%B3\"><span class=\"toc-text\">Docker相关</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%AE%BF%E9%97%AEjboss\"><span class=\"toc-text\">访问jboss</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%E4%B8%BB%E6%9C%BA%E5%9C%B0%E5%9D%80\"><span class=\"toc-text\">主机地址</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#k8s%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">k8s安装和使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BApod%E8%8A%82%E7%82%B9%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">创建pod节点配置文件</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">问题</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%AE%BF%E9%97%AE%E6%8C%82%E8%BD%BD%E7%82%B9%E5%87%BA%E7%8E%B0%E6%9D%83%E9%99%90%E4%B8%8D%E8%B6%B3\"><span class=\"toc-text\">访问挂载点出现权限不足</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#docker%E5%90%AF%E5%8A%A8%E6%8A%A5%E9%94%99unable-to-configure-the-Docker-daemon-with-file\"><span class=\"toc-text\">docker启动报错unable to configure the Docker daemon with file</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#k8s-node%E8%8A%82%E7%82%B9%E4%BC%9A%E4%BC%98%E5%85%88%E8%AF%BB%E5%8F%96%E6%9C%AC%E5%9C%B0%E7%9A%84%E9%95%9C%E5%83%8F%EF%BC%8C%E8%80%8C%E4%B8%8D%E6%98%AF%E5%8E%BB%E4%BB%93%E5%BA%93%E6%8B%89%E5%8F%96\"><span class=\"toc-text\">k8s node节点会优先读取本地的镜像，而不是去仓库拉取</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#kubeadm%E5%88%9D%E5%A7%8B%E5%8C%96%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">*kubeadm初始化问题</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%87%BA%E7%8E%B0ping%E4%B8%8D%E9%80%9Apod%E7%9A%84%E6%83%85%E5%86%B5\"><span class=\"toc-text\">出现ping不通pod的情况</span></a></li></ol></li></ol></li></ol></li></ol></li></ol>","author":{"name":"Xin_Chen","slug":"xin_chen","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"前方净空，浮标已亮，准许跃迁<br/>愿诸君武运昌盛，燃尽星空","socials":{"github":"https://github.com/hanzixin13","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"【SpringBoot】自定义外部配置文件读取","uid":"c4c0028f53dfa8eb1982c4248f9ab94a","slug":"【SpringBoot】自定义外部配置文件读取","date":"2022-05-27T07:53:01.000Z","updated":"2022-05-27T09:18:46.205Z","comments":true,"path":"api/articles/【SpringBoot】自定义外部配置文件读取.json","keywords":null,"cover":"https://img.zcool.cn/community/0189d45996dc5500000021290a96b8.jpg@1280w_1l_2o_100sh.jpg","text":"记SpringBoot读取配置文件的坑（自定义元数据）使用的注解@ConfigurationProperties，@ConditionalOnProperty在一次日常写代码中，按着度娘写的代码去读取配置文件中的数据，发现 @ConditionalOnProperty 这个注解总...","link":"","photos":[],"count_time":{"symbolsCount":"6.4k","symbolsTime":"6 mins."},"categories":[],"tags":[{"name":"SpringBoot","slug":"SpringBoot","count":1,"path":"api/tags/SpringBoot.json"},{"name":"Java","slug":"Java","count":1,"path":"api/tags/Java.json"}],"author":{"name":"Xin_Chen","slug":"xin_chen","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"前方净空，浮标已亮，准许跃迁<br/>愿诸君武运昌盛，燃尽星空","socials":{"github":"https://github.com/hanzixin13","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"Hello World","uid":"b9663f58f18133b35bfe243f3e916a80","slug":"hello-world","date":"2022-05-26T11:33:49.450Z","updated":"2022-05-26T11:33:49.451Z","comments":true,"path":"api/articles/hello-world.json","keywords":null,"cover":null,"text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the ...","link":"","photos":[],"count_time":{"symbolsCount":440,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"Xin_Chen","slug":"xin_chen","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"前方净空，浮标已亮，准许跃迁<br/>愿诸君武运昌盛，燃尽星空","socials":{"github":"https://github.com/hanzixin13","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}